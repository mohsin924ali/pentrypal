module.exports = {
  preset: 'jest-expo',
  roots: ['<rootDir>/src', '<rootDir>/__tests__'],
  testMatch: ['**/__tests__/**/*.(ts|tsx|js)', '**/*.(test|spec).(ts|tsx|js)'],
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
  moduleNameMapper: {
    '^@/(.*)$': '<rootDir>/src/$1',
    '^@/components/(.*)$': '<rootDir>/src/presentation/components/$1',
    '^@/screens/(.*)$': '<rootDir>/src/presentation/screens/$1',
    '^@/navigation/(.*)$': '<rootDir>/src/presentation/navigation/$1',
    '^@/hooks/(.*)$': '<rootDir>/src/presentation/hooks/$1',
    '^@/providers/(.*)$': '<rootDir>/src/presentation/providers/$1',
    '^@/store/(.*)$': '<rootDir>/src/application/store/$1',
    '^@/services/(.*)$': '<rootDir>/src/application/services/$1',
    '^@/utils/(.*)$': '<rootDir>/src/application/utils/$1',
    '^@/domain/(.*)$': '<rootDir>/src/domain/$1',
    '^@/infrastructure/(.*)$': '<rootDir>/src/infrastructure/$1',
    '^@/shared/(.*)$': '<rootDir>/src/shared/$1',
    '^@/types$': '<rootDir>/src/shared/types',
    '^@/constants$': '<rootDir>/src/shared/constants',
    '^@/theme$': '<rootDir>/src/shared/theme',
    '^@/validation$': '<rootDir>/src/shared/validation',
    '^@/i18n$': '<rootDir>/src/shared/i18n',
    '^@/test/(.*)$': '<rootDir>/test/$1',
  },
  setupFilesAfterEnv: ['@testing-library/jest-native/extend-expect', '<rootDir>/test/setup.ts'],
  transformIgnorePatterns: [
    'node_modules/(?!(react-native|@react-native|@expo|expo|@expo/vector-icons|react-navigation|@react-navigation|@reduxjs/toolkit|react-redux|react-hook-form|zod)/)',
  ],
  collectCoverageFrom: [
    'src/**/*.{ts,tsx}',
    '!src/**/*.d.ts',
    '!src/**/__tests__/**',
    '!src/**/*.test.*',
    '!src/**/*.spec.*',
    '!src/**/index.ts',
    '!src/shared/types/**',
    '!src/shared/constants/**',
  ],
  coverageDirectory: 'coverage',
  coverageReporters: ['text', 'lcov', 'html', 'json-summary'],
  coverageThreshold: {
    global: {
      branches: 90,
      functions: 90,
      lines: 90,
      statements: 90,
    },
  },
  testEnvironment: 'jsdom',
  verbose: true,
  clearMocks: true,
  resetMocks: true,
  restoreMocks: true,
  bail: false,
  errorOnDeprecated: true,
  maxWorkers: '50%',
  testTimeout: 10000,
  watchman: true,
};
